#!/usr/bin/perl -w
use strict;

sub error {
    my ($error) = @_;
    print $error;
    print "ptd - a todo list utility.\n";
    print "usage:\n";
    print " ptd <action> [options]\n";
    print "actions:\n";
    print "-l                list all entries\n";
    print "-a [entry]        add [entry] as a todo item\n";
    print "-t [number]       toggle an item's todo/done status\n";
    print "-r                remove all completed tasks from the list\n";
    exit;
}
sub addEntry {
    my ($entry) = @_;
    open(TODO, ">>./.ptd");
    print TODO "todo $entry \n";
    print "added '$entry' to todo list.\n";
    exit;
}

sub countItems {
    (my $target) = @_;
    open(TODO, "./.ptd") or die "please create a .ptd file";
    @_ = ();
    for $_ (<TODO>) { push @_, $1 if /^$target:(.*)$/; }

    return @_;
}

sub printTodo {
    my @todo = countItems("todo"); my @done = countItems("done");
    my $t = 1; my $d = 1;
    print "todo:\n";
    for my $todo (@todo) { print "$t:$todo\n"; $t++; }
    print "done:\n";
    for my $done (@done) { print "$d:$done\n"; $d++; }
    exit;
}

my $args = $#ARGV;
$_ = $ARGV[0];

if ($args == -1) { error("please specify at least one arguement\n\n"); }
if ($args == 0) {
    if (/-l/) { printTodo; }
    else { error("i don't understand what you're saying\n\n"); }
}
if ($args == 1) {
    if (/-a/) { addEntry($ARGV[1]); }
#    if (/-d/) { markDone($ARGV[1]); }
}    
